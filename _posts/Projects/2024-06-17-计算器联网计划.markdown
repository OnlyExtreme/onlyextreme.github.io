我的计算器 HP Prime V2 有一个官方配件，用于将计算器连入局域网方便课堂通信。另外，我的计算器自带的编程语言中有两个函数 `USB_SEND()` 和 `USB_RECV()`，分别用来发送和接收 MicroUSB 接口中的信息，因此，可不可能用一块带有 WiFi 功能的开发板（如 esp32）使用 MircroUSB 接口连接到计算器，从而实现计算机与互联网的通信，就可以上网了！！！

因此，我们的计划分为三步：

- 计算机与 esp32 的通信协议
- HTTPS 底层 web server 协议的实现
- HTTPS 网页在计算器上的渲染

# 6-19

今天大概查询了一下资料，我的规划大方向没什么问题，但是问题很大！！！仔细了解之后才知道有多难（悲，尤其是点名批评网页渲染，查了一下资料，步骤如下：

1. 首先我们拿到了一串原始数据，要先把它变为字符串方便处理，这里大概就把他变成了 html 格式的东西；
2. 解析 HTML：遇到 CSS 解析 CSS，遇到 JS 解析 JS~~（不过我大概率会直接不支持 CSS 和 JS）~~，然后会把网页结构构建为一棵 DOM 树（我也不知道是啥），大概是，对于原始 HTML 数据，会将其分解并表示为 **开始标记、结束标记、内容标记**，然后就可以构造 DOM。

![图1](https://segmentfault.com/img/bVcIfOw)

啊看不懂了，反正先把链接丢在这里以后再看。[网页渲染](https://segmentfault.com/a/1190000037650883)

然后 esp32 和 HP Prime 通信协议这部分感觉还好，因为 HP Prime 的通信还是很方便的，串口一开，发送什么 esp32 就接收什么，esp32 发什么这边就 Recv 什么，应该问题不大。

HTTPS 协议这部分应该也问题不大，因为貌似 HTTPS 协议在 esp32 api 里有，如果没有的话网上资料也一大把。

所以最难的还是网页渲染啊啊啊啊！！

官方 python3 里有 `html.parser` 这玩意，但是我没有，但是现在也好办直接照抄就行，其实字符串解析器 parser 好办，但是重排和渲染有点困难，感觉有必要的话得去研读一下 w3m 的源码了，但是，md，这玩意有 30 多个文件，有点难，但是无所谓。现在就等 esp32 到了就可以准备开干了！

笑死了找到了一个终端浏览器 Lynx，自 1998 年维护至今，我可以下载 98 年的源码看。

很好找到了源码，有汤暖暖的 $102$ 个文件，其中核心文件有惊人的 $7500$ 行。Nice。

好好好找到救命恩人了，放在这里。[toy-browser](https://xie.infoq.cn/article/21ad6b8269f3eb0674ee1c0b2)

# 6-20

很好，我的 esp32 到货了，配置环境什么的还是不难的，然后开始学，找到了它店里配套的B站课程，然后发现，这是我目前所见的免费课程里面质量最高的，其配套资料甚至不是存储在百度网盘而是自建网站。他甚至教你看文档来自己解决问题。太棒了。

玩了一整个晚上，真好玩啊，最后实现到了 esp32 连接 wlan 再通过 udp 传输，电脑远程遥控板上的 led 灯的开关。真的很好玩。

# 6-21

今天在 HKUST 参观+玩，没什么时间搞这个，晚上打完球回来看看，在网上找使用 micropython 在 UART0 串口上开启通信的方法。因为 UART0 是板子的 repl 串口，也就是和电脑上终端通信的串口，所以没法正常地使用它。今天搜索了一下其实很好解决，先发 reset，重置 repl，但是因为没有连接所以重置失败，接着就可以再开一次 URAT0，这样就可以实现通信了。后面用串口监听工具查看，发现可以正常地收、发信息。那么明天回家之后直接开始和 HP Prime 通信，然后就可以开始正式干活了。